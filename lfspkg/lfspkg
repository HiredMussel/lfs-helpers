#!/bin/bash

PACKAGE_PATH=.

# Process the arguments to the function
while getopts ":CMG"; do 
    case ${opt} in
        C ) create_pkg $2
        M ) modify_pkg_data $3 $4 $2
        G ) get_pkg_data $3 $2
    esac
done
exit

# Helper functions for creating and editing the package config

# Create the package - a package is a shell script containing instructions on
# how the package is to be installed with the configuration options set by 
# specific comments within the file.
create_pkg() {
    [ $# -eq 0 ] \
        && echo "No package name provided" \
        && exit 1

    [ ! -d $PACKAGE_PATH ] \
        && echo "Please create $PACKAGE_PATH to proceed" \
        && exit 2

    echo "Creating package $1 in $PACKAGE_PATH/$1"

    [ ! -d $PACKAGE_PATH/$1 ] \
        && mkdir $PACKAGE_PATH/$1

    [ -e $PACKAGE_PATH/$1/PKGBUILD ] \
        && echo "Package already exists!" \
        && exit 3

    touch $PACKAGE_PATH/$1/PKGBUILD
    cat << EOF > $PACKAGE_PATH/$1/PKGBUILD
#!/bin/bash

# [General]
#
# [Version]
# stable_version=
# version_listing=
# version_scheme=
# latest_version=
#
# [Build]
# distfiles=
#
# [Dependencies]
# depends_on=
# depended_on_by=
# lock=

EOF
    echo "Created package $1 successfully"
}

# Retrieve a key from a package
get_pkg_data() {
    [ $# -eq 0 ] \
        && echo "No configuration option selected" \
        && exit 1

    [ $# -eq 1 ] \
        && echo  "All provided packages changed successfully" \
        && exit 2

    [ ! -e $PACKAGE_PATH/$2/PKGBUILD ] \
        && echo "Could not find configuration for package $2" \
        && exit 3

    sed -n "s@#\s*$1=\s*\(.*\)\($\)@\1@p" $PACKAGE_PATH/$2/PKGBUILD
}

# Change a key in a package
change_pkg_data() {
    [ $# -eq 0 ] \
        && echo "No configuration option selected" \
        && exit 1

    [ $# -eq 1 ] \
        && echo "No new config provided" \
        && exit 1

    [ $# -eq 2 ] \
        && echo  "All provided packages changed successfully" \
        && exit 2

    [ ! -e $PACKAGE_PATH/$3/PKGBUILD ] \
        && echo "Could not find package configuration" \
        && exit 3

    sed -i "s@#\s*$1=\(.*\)\($\)@\0$2@" $PACKAGE_PATH/$3/PKGBUILD
}

# Add a key to a package
add_pkg_data() {
    [ $# -eq 0 ] \
        && echo "No package name provided" \
        && exit 1

    [ $# -eq 1 ] \
        && echo "No configuration option selected" \
        && exit 2

    [ ! -e $PACKAGE_PATH/$3/PKGBUILD ] \
        && echo "Could not find package configuration" \
        && exit 3

    sed -i "s@#\[General\]@\0\n#\ $1=$2@" $PACKAGE_PATH/$3/PKGBUILD
}

# Set a key in a package
modify_pkg_data() {
    [ $# -eq 0 ] \
        && echo "No package name provided" \
        && exit 1

    [ $# -eq 1 ] \
        && echo "No configuration option selected" \
        && exit 2

    [ ! -e $PACKAGE_PATH/$1/PKGBUILD ] \
        && echo "Could not find configuration for package $2" \
        && exit 3

    [ -z $(get_pkg_data $1 $2) ] \
        && add_pkg_data $1 $2 $3 \
        && exit

    change_pkg_data $1 $2 $3
}
