#!/bin/bash

PACKAGE_PATH=.

# Helper functions for creating and editing the package config

# Create the package - a package is a shell script containing instructions on
# how the package is to be installed with the configuration options set by 
# specific comments within the file.
create_pkg() {
    [ $# -eq 0 ] \
        && echo "No package name provided" \
        && exit 1

    [ ! -d $PACKAGE_PATH ] \
        && echo "Please create $PACKAGE_PATH to proceed" \
        && exit 2

    echo "Creating package $1 in $PACKAGE_PATH/$1"

    [ ! -d $PACKAGE_PATH/$1 ] \
        && mkdir $PACKAGE_PATH/$1

    [ -e $PACKAGE_PATH/$1/PKGBUILD ] \
        && echo "Package already exists!" \
        && exit 3

    touch $PACKAGE_PATH/$1/PKGBUILD
    cat << EOF > $PACKAGE_PATH/$1/PKGBUILD
#!/bin/bash

# [General]
#
# [Version]
# stable_version=
# version_listing=
# version_scheme=
# latest_version=
#
# [Build]
# distfiles=
#
# [Dependencies]
# depends_on=
# depended_on_by=
# lock=

EOF
    echo "Created package $1 successfully"

    create_pkg ${@:2}
}

# Retrieve a key from a package
get_pkg_data() {
    [ $# -eq 0 ] \
        && echo "No configuration option selected" \
        && exit 1

    [ $# -eq 1 ] \
        && exit

    [ ! -e $PACKAGE_PATH/$2/PKGBUILD ] \
        && echo "Could not find configuration for package $2" \
        && exit 3

    sed -n "s@#\s*$1=\s*\(.*\)\($\)@\1@p" $PACKAGE_PATH/$2/PKGBUILD

    get_pkg_data $1 ${@:3}
}

# Change a key in a package
change_pkg_data() {
    [ $# -eq 0 ] \
        && echo "No configuration option selected" \
        && exit 1

    [ $# -eq 1 ] \
        && echo "No new value for option $1 provided" \
        && exit 2

    [ $# -eq 2 ] \
        && exit

    [ ! -e $PACKAGE_PATH/$3/PKGBUILD ] \
        && echo "Could not find package configuration" \
        && exit 3

    sed -i "s@\(#\s*$1=\).*@\1$2@" $PACKAGE_PATH/$3/PKGBUILD
}

# Add a key to a package
add_pkg_data() {
    [ $# -eq 0 ] \
        && echo "No package name provided" \
        && exit 1

    [ $# -eq 1 ] \
        && echo "No configuration option selected" \
        && exit 2

    [ $# -eq 2 ] \
        && exit

    [ ! -e $PACKAGE_PATH/$3/PKGBUILD ] \
        && echo "Could not find package configuration" \
        && exit 3

    sed -i "s@#\s*\[General\]@\0\n#\ $1=$2@" $PACKAGE_PATH/$3/PKGBUILD
}

# Set a key in a package
modify_pkg_data() {
    [ $# -eq 0 ] \
        && echo "No configuration option selected" \
        && exit 1

    [ $# -eq 1 ] \
        && echo "No new value for option $1 provided" \
        && exit 2

    [ $# -eq 2 ] \
        && exit

    [ ! -e $PACKAGE_PATH/$3/PKGBUILD ] \
        && echo "Could not find configuration for package $3" \
        && exit 3

    change_pkg_data $1 $2 $3

    [ -z $(get_pkg_data $1 $3) ] \
        && add_pkg_data $1 $2 $3
    
    modify_pkg_data $1 $2 ${@:4}
}

# Delete a key in a package
delete_pkg_data() {
    [ $# -eq 0 ] \
        && echo "No key to delete selected" \
        && exit 1

    [ $# -eq 1 ] \
        && exit

    sed -i "s@\(#\s*$1=\).*@\1@" $PACKAGE_PATH/$2/PKGBUILD

    delete_pkg_data $1 ${@:3}
}

[ ! -z $(echo $1 | grep -- "\-.*C.*") ] \
    && echo "Will attempt to create packages ${@:2}"

[ ! -z $(echo $1 | grep -- "\-.*M.*") ] \
    && echo "Will attempt to set $2 to $3 for packages ${@:4}"

[ ! -z $(echo $1 | grep -- "\-.*D.*") ] \
    && echo "Will attempt to clear the value of $2 for packages ${@:3}"

[ ! -z $(echo $1 | grep -- "\-.*G.*") ] \
    && echo "Will attempt to return the value of $2 for packages ${@:3}"

# Process the arguments to the function
while getopts ":CMGD" opt; do 
    case "${opt}" in
        C ) create_pkg ${@:2}
        ;;
        M ) modify_pkg_data $2 $3 ${@:4}
        ;;
        G ) get_pkg_data $2 ${@:3}
        ;;
        D ) delete_pkg_data $2 ${@:3}
        ;;
    esac
done
exit
